% function [outtext]=ATtoG4BL(P_0,particle,folder)
% tansform AT structure into G4BL input file.
% 
% Simone Maria Liuzzo PhD@ESRF 11-oct-2012

%load ../../../routines/OptimizationsN4/StartVal0.mat
%load ../../../routines/OptimizedipolesV173/bendoptStartV173.mat
%arc=LOW_EMIT_RING;
%arc=mergedoublesDipole(arc,'BPI5');
%arc=mergedoublesDipole(arc,'BPI6');
%E0=arc{1}.('Energy');
%multbend=2;
%nameG4bllat='G4blnewlat';
% arc=LOW_EMIT_RING;
% E0=6.039*1e9;

  load ../../../LATTICES/perfmach78.mat
  arc=THERING;%(1:51);
  multbend=0;
  nameG4bllat='ESRFlat';

 sector=1;
% E0=6.039*1e9;

format longe

StepLength=10; % [mm] default is 10mm

Nevents=1; % e+ events and e- events.
disp(['writing G4BL file to simulate: ' num2str(Nevents) ' e-'])
det=0;
SR=0;
RINGFLAG=1;
fringON=0;

TotLength=findspos(arc,length(arc)+1); %[mm]

beamstart=0;

% beams shapes

% diversi da zero muore!!! sestupoli??? KL? BRHO?
sX=1*1e-3; %[mm]
sY=1*1e-3; %[mm]
sXp=0*1e-6; %[rad]
sYp=0*1e-6; %[rad]

killval=1;


P_0=sqrt((E0/1e9)^2-(0.511/1e6)^2); % transform in momentum
particle='e-';

sxt=1;
quadH=-1;  % e- want - sign

Brho=3.3356409519815205*P_0; % positron and opposite rotation


bigmondo=[...
    ...'box mondo height=10000 width=3000000 length=3000000 material=Vacuum \n'...
    ];

ShynRadstarter=[
    '#### no net displacement beam generator for radiation.\n'...
    'genericbend B1  fieldLength=2 fieldWidth=300  fieldHeight=300  ironLength=2 ironWidth=330  ironHeight=330  fringe=0   By=0.1 ironColor=0.5,.0,.0 kill=1 \n'...
    'genericbend B2  fieldLength=1 fieldWidth=300  fieldHeight=300  ironLength=1 ironWidth=330  ironHeight=330  fringe=0   By=-0.1 ironColor=1,.0,.0 kill=1 \n'...
    'genericbend B3  fieldLength=1 fieldWidth=300  fieldHeight=300  ironLength=1 ironWidth=330  ironHeight=330  fringe=0   By=-0.1 ironColor=0.5,.0,.0 kill=1 \n'...
    'genericbend B4  fieldLength=1 fieldWidth=300  fieldHeight=300  ironLength=1 ironWidth=330  ironHeight=330  fringe=0   By=0.1 ironColor=1,.0,.0 kill=1\n'...
    '\n'...
    'place B1 z=0\n'...
    'place B2 z=1.5\n'...
    'place B3 z=2.5\n'...
    'place B4 z=3.5\n'...
    ];

% beam parameters
posbeam=[ ' beam gaussian particle=' particle ...
    ' beamZ=' num2str(beamstart) ...
    ' beamX=' num2str(+0*1.532845188e-07,15) ...
    ' beamXp=' num2str(+0*1.683548689e-07,15) ...
    ' rotation=Y' num2str(0*180)... rotate to head back
    '  nEvents=' num2str(Nevents) ' '... % nEvents=10
    '	sigmaX=' num2str(sX,15) ...
    ' sigmaY=' num2str(sY,15)...
    ' sigmaXp=' num2str(sXp,15)...
    ' sigmaYp=' num2str(sYp,15) ' '...
    '	meanMomentum=' num2str(P_0*1000,15) ' sigmaP=0'...
    ' meanT=0 sigmaT=0 \n'...
    'trackcolor reference=1,1,1 \n'...
    ShynRadstarter...
    ];

head=['physics QGSP synchrotronRadiation=' num2str(SR) '\n'...
    'start x=0 y=0 z=' num2str(beamstart) ' radiusCut=0.001 ring=' num2str(RINGFLAG) '\n'...
    'reference particle=' particle ' referenceMomentum=' num2str(P_0*1000,15) ' noEloss=1'...
    ' beamXp=0 beamYp=0 '...
    ' tuneMomentum=' num2str(P_0,15) '\n'...
    'box BeamVis width=200.0 height=200.0 length=0.1 material=Vacuum color=1,0,0 kill=1 \n'...
    'trace nTrace=' num2str(2*Nevents) ' oneNTuple=1 format=root \n'...ascii
    ' param eventTimeLimit=60*8\n'... %  8 minutes maximum time for one simulation
    ' trackcuts keep=e+,e-,gamma maxTime=1000000*10\n' ... %ns --> 4micros
    ];
% x damping time= 0.26700741E-01 => 15% =~ 40ms = 40*10^6 ns


defQ= ['virtualdetector Det radius=10.0 length=' num2str(2*StepLength)...
    ' color=0,.2,.0 referenceParticle=1 format=rootExtended\n'];
defS='';
defB='';
ord=1;
plac={};
defined={};
d=1;


quadr=unique([findcells(arc,'Class','Quadrupole') findcells(arc,'BetaCode','QP') ]);
sextu=unique([findcells(arc,'Class','Sextupole') findcells(arc,'BetaCode','SX') ]);
dipol=unique([findcells(arc,'Class','Dipole') findcells(arc,'BetaCode','DI') ]);
octup=unique([findcells(arc,'Class','Octupole') findcells(arc,'BetaCode','OC') ]);

for i=1:length(quadr)
    %genericquad QDpi fieldLength=280 apertureRadius=101.5 ironRadius=381 \
    %	ironLength=250 ironColor=0.6,.0,.6 kill=' num2str(killval) ' gradient=$KQDpi
    %
    S=findspos(arc,quadr(i))+arc{quadr(i)}.('Length')/2;
    N=arc{quadr(i)}.('FamName');
    L=arc{quadr(i)}.('Length');
    K=arc{quadr(i)}.('PolynomB')(2);
    
    if sum(strcmp(N,defined))==0;
        inrad=60; % quarupole size
        outrad=70;
        
        
        defQ=[ defQ ...
            ' genericquad ' N ' '...
            ' fieldLength=' num2str(L*1000,15) ... % mm
            ' apertureRadius=' num2str(inrad,15) ' '...
            ' ironRadius=' num2str(outrad,15) ' '...
            ' ironLength=' num2str(L*1000,15) ' '...
            ' ironColor=0/255,191/255,255/255 kill=' num2str(killval) ' '...
            ' fringe=' num2str(0*fringON) ...
            ' gradient=' num2str(quadH*K*Brho,15) ' '...  K
            ' maxStep=' num2str(StepLength/2)  ...
            '\n']; %#ok<*AGROW>
        
        % add to already defined
        defined{d}=N;
        d=d+1;
    end
    
    if (ord/2-floor(ord/2))==(det-1) % set 0 to place a detector in every quadrupole.
        plac{ord}=['place ' N ' parent=  z=' num2str(S*1000,15)...
            ' coordinates=centerline'...
            '\n'...
            'place ' 'Det' ...
            ' rename=DET# '...
            ' parent=  z=' num2str((S)*1000)...
            ' coordinates=centerline '...
            '\n']; %#ok<*SAGROW>
    else
        plac{ord}=['place ' N ' parent=  z=' num2str(S*1000,15)...
            ' coordinates=centerline'...
            '\n']; %#ok<*SAGROW>
    end
    
    ord=ord+1;
end

for i=1:length(sextu)
    %multipole SF1 fieldLength=150 apertureRadius=101.5 ironRadius=381 \
    %	ironLength=140 ironColor=0,.6,.6 kill=' num2str(killval) ' sextupole=$KSF1
    S=findspos(arc,sextu(i))+arc{sextu(i)}.('Length')/2;
    N=arc{sextu(i)}.('FamName');
    L=arc{sextu(i)}.('Length');
    %Ord=arc{sextu(i)}.('MaxOrder');
    K=2*arc{sextu(i)}.('PolynomB')(3);
    
    if sum(strcmp(N,defined))==0;
        inrad=60;
        outrad=70;
        
        
        defS=[ defS ...
            ' multipole ' N ' '...
            ' fieldLength=' num2str(L*1000-1e6,15) ... % mm
            ' apertureRadius=' num2str(inrad,15) ' '...
            ' ironRadius=' num2str(outrad,15) ' '...
            ' ironLength=' num2str(L*1000,15) ' '...
            ' ironColor=173/255,255/255,47/255 kill=' num2str(killval) ' '...
            ' fringe=' num2str(0*fringON) ...
            ' maxStep=' num2str(StepLength/2)  ...
            ' sextupole=' num2str(sxt*K*Brho,15) ' '... K2
            '\n'];
        % add to already defined
        defined{d}=N;
        d=d+1;
    end
    
    
    plac{ord}=['place ' N ' parent=  z=' num2str(S*1000,15)...
        ' coordinates=centerline '...
        '\n']; %#ok<*SAGROW>
    ord=ord+1;
    
end

totA=0;
for i=1:length(dipol)
    
    %genericbend BHer fieldWidth=1660 fieldHeight=200 fieldLength=5400 \
    %	ironColor=1,0,0 ironWidth=1828 ironHeight=1320 ironLength=5000 \
    % kill=' num2str(killval) ' By=0.2778157677856496
    %tune B1 z0=100 z1=3000 initial=-0.6500 step=0.01 expr=Px1/Pz1 \
    %tolerance=0.000001
    %genericbend B fieldWidth=500 fieldHeight=500 fieldLength=500 \
    %ironWidth=800 ironHeight=800 ironLength=500 \
    %fieldMaterial=Vacuum place B z=2000 rename=B1 rotation=Y15 By=B1
    
    S=findspos(arc,dipol(i))+arc{dipol(i)}.('Length')/2;
    N=arc{dipol(i)}.('FamName');
    L=arc{dipol(i)}.('Length');
    %Ord=arc{sextu(i)}.('MaxOrder');
    A=arc{dipol(i)}.('BendingAngle');
    K=quadH*arc{dipol(i)}.('PolynomB')(2);

    tmpmultibend=multbend;
    if K==0
        multbend=0;
    end
    
    if multbend==0
        split=1;
    else
        split=1; %make 'split' parts of a single magnet
    end
    L=L/split;
    A=A/split;
    K=K/split;
    totA=totA+A;
    
    if sum(strcmp(N,defined))==0 % if not defined, define.
        Fw=240*1.0;
        Fh=70;
        Iw=10+Fw;
        Ih=30+Fh;
        
        defB=[ defB ...
            '\n param B' num2str(i) N '=' num2str(-Brho*A/L,15) '\n'...
            ];
        if multbend==0
            if sector==0
                defB=[ defB ...
                    'genericbend ' N ' '...
                    ' fieldLength=' num2str(L*1000/split,15) ... % mm
                    ' fieldWidth=' num2str(Fw,15) ' '...
                    ' fieldHeight=' num2str(Fh,15) ' '...
                    ' ironLength=' num2str(L*1*1000/split,15) ... % mm
                    ' ironWidth=' num2str(Iw,15) ' '...
                    ' ironHeight=' num2str(Ih,15) ' '...' fringe=' num2str(fringON) ...
                    ' maxStep=' num2str(StepLength)  ...
                    ' By=' num2str(Brho*A/L,15)...' fieldColor=0.5,.1,.0 '...' By=$B' num2str(i) A ...
                    ' ironColor=1,.0,.0 kill=' num2str(killval) ' '...
                    '\n'...
                    ];
                
            elseif sector==1
                
                defB=[ defB ...
                    'idealsectorbend ' N ' '...
                    ' fieldCenterRadius=' num2str((L/A)*1000,15) ' '...
                    ' fieldOuterRadius=' num2str((L/A)*1000+250,15) ' '...
                    ' fieldInnerRadius=' num2str((L/A)*1000-250,15) ' '...
                    ' fieldHeight=' num2str(Fh,15) ' '...
                    ' ironOuterRadius=' num2str((L/A)*1000+270,15) ... % mm
                    ' ironInnerRadius=' num2str((L/A)*1000-270,15) ' '...
                    ' ironHeight=' num2str(Ih,15) ' '...
                    ' maxStep=' num2str(StepLength)  ...' fringe=' num2str(fringON) ...
                    ' angle=' num2str(A*180/pi,15)...' fieldColor=0.5,.1,.0 '...' By=$B' num2str(i) A ...
                    ' By=' num2str(Brho*A/L,15)...
                    ' ironColor=1,.0,.0 kill=' num2str(killval) ' '...
                    '\n'...
                    ];
            end
            
        elseif multbend==1
             % multipole bend-quadrupole
            inrad=60;
            outrad=70;
            
            L=L * (2*sin(A/2))/A;  % Length of sector arc to length of rectangular element
            
            % define 1 slice
            defB=[ defB ...
                'multipole ' N ' '...
                ' fieldLength=' num2str(L*1000,15) ... % mm
                ' ironLength=' num2str(L*1000,15) ... % mm
                ' ironRadius=' num2str(outrad,15) ... % mm
                ' apertureRadius=' num2str(inrad,15) ' '...
                ' fringe=' num2str(0*fringON) ...
                ' maxStep=' num2str(StepLength,15)  ...
                ' dipole=' num2str(Brho*A/L,15)...' fieldColor=0.5,.1,.0 '...' By=$B' num2str(i) A ...
                ' quadrupole=' num2str(Brho*K,15)...
                ' ironColor=1,.0,.0 kill=' num2str(killval) ' '...
                '\n'...
                ];
            
            % add to already defined
            defined{d}=N;
            d=d+1;
                
        elseif multbend==2
             % misalignaed quadrupole
            inrad=450;
            outrad=500;
            
            L=L * (2*sin(A/2))/A;  % Length of sector arc to length of rectangular element
            % L=L * 0.99;
            % define 1 slice
            defB=[ defB ...
                ' genericquad ' N ' '...
                ' fieldLength=' num2str(L*1000,15) ... % mm
                ' apertureRadius=' num2str(inrad,15) ' '...
                ' ironRadius=' num2str(outrad,15) ' '...
                ' ironLength=' num2str(L*1000,15) ' '...
                ' ironColor=0/255,191/255,255/255 kill=' num2str(killval) ' '...
                ' fringe=' num2str(0*fringON) ...
                ' gradient=' num2str(K*Brho,15) ' '...  K
                ' maxStep=' num2str(StepLength/2)  ...
                ' ironColor=1,.0,.0 kill=' num2str(killval) ' '...
                '\n'...
                ];
            
            % add to already defined
            defined{d}=N;
            d=d+1;
        
        end
    end
    
    disp(totA)
    
    dipposstr=[];
    
    for spl=1:split
        S=findspos(arc,dipol(i))+(L*(spl-1/2));
        if multbend==1
            
            dipposstr=[ dipposstr ' \n'...
                'place ' N ' parent=  z=0+' num2str(0) '+0+' num2str(S*1000,15) ...
                ' x=' num2str(0*L/2*tan(A/2)*1000,15) ''... % move in by a sagitta amount
                ' coordinates=centerline'...' \n'...
                ' rotation=Y' num2str(0*A*180/pi/2,15)...' rename=' N ' \n'...
                ...' By=B' num2str(i) N ...
                '\n' ...
                ' corner C' num2str(i) ' z=0+' num2str(0) '+0+' num2str((S)*1000,15) ...-L/2
                ' rotation=Y' num2str(A*180/pi,15)  ' radiusCut=100 radius='  num2str((L/A)*1000,15) '\n'...'#corner' ' parent=  z=' num2str((B{2}(i)+B{4}(i)/2)*1000,15) ... ' rotation=Y' num2str(B{3}(i)*180/pi/2,15) ' \n'...
                '\n'
                ...' cornerarc' ' z=0+' num2str(0) '+0+' num2str((S)*1000,15) ...-L/2
                ...' angle=' num2str(A*180/pi,15)  ' centerRadius='  num2str((L/A)*1000,15) '\n'...'#corner' ' parent=  z=' num2str((B{2}(i)+B{4}(i)/2)*1000,15) ... ' rotation=Y' num2str(B{3}(i)*180/pi/2,15) ' \n'...
                ...'\n'...
                ]; %#ok<*SAGROW>
        elseif multbend==2
            
            dipposstr=[ dipposstr ' \n'...
                'place ' N ' parent=  z=0+' num2str(0) '+0+' num2str(S*1000,15) ...
                ' x=' num2str(-A/(K*L)*1000,15) ''... % move in by a sagitta amount
                ' coordinates=centerline'...' \n'...
                ' rotation=Y' num2str(A*180/pi/2,15)...' rename=' N ' \n'...
                ...' By=B' num2str(i) N ...
                '\n' ...
                ...' corner C' num2str(i) ' z=0+' num2str(0) '+0+' num2str((S)*1000,15) ...-L/2
                ...' rotation=Y' num2str(A*180/pi,15)  ' radiusCut=100 radius='  num2str((L/A)*1000,15) '\n'...'#corner' ' parent=  z=' num2str((B{2}(i)+B{4}(i)/2)*1000,15) ... ' rotation=Y' num2str(B{3}(i)*180/pi/2,15) ' \n'...
                ...'\n'
                ' cornerarc' ' z=0+' num2str(0) '+0+' num2str((S)*1000,15) ...-L/2
                ' angle=' num2str(A*180/pi,15)  ' centerRadius='  num2str((L/A)*1000,15) '\n'...'#corner' ' parent=  z=' num2str((B{2}(i)+B{4}(i)/2)*1000,15) ... ' rotation=Y' num2str(B{3}(i)*180/pi/2,15) ' \n'...
                '\n'...
                ]; %#ok<*SAGROW>
            
        elseif multbend==0
            if sector==0
                % %  rectangular
                dipposstr=[ dipposstr ' \n'...
                    'place ' N ' parent=  z=0+' num2str(0) '+0+' num2str(S*1000,15) ...
                    ' x=' num2str(L/2*tan(A/2)*1000,15) ''... % move in by a sagitta amount
                    ' coordinates=centerline'...' \n'...
                    ' rotation=Y' num2str(A*180/pi/2,15)...' rename=' N ' \n'...
                    ...' By=B' num2str(i) N ...
                    '\n' ...
                    ' cornerarc' ' z=0+' num2str(0) '+0+' num2str((S-L/2)*1000,15) ...
                    ' angle=' num2str(A*180/pi,15)  ' centerRadius='  num2str((L/A)*1000,15) '\n'...'#corner' ' parent=  z=' num2str((B{2}(i)+B{4}(i)/2)*1000,15) ... ' rotation=Y' num2str(B{3}(i)*180/pi/2,15) ' \n'...
                    '\n'...
                    ]; %#ok<*SAGROW>
                
            elseif sector==1
                % % sector
                S=findspos(arc,dipol(i))+(L*(spl-1));
                
                
                dipposstr=[ dipposstr ' \n'...
                    'place ' N ' parent=  z=0+' num2str(0) '+0+' num2str(S*1000,15) ...
                    ' x=' num2str(0*L/2*tan(A/2)*1000,15) ''... % move in by a sagitta amount
                    ' coordinates=centerline'...' \n'...
                    ' rotation=Y' num2str(0*(A*180/pi)/2,15)...' rename=' N ' \n'...
                    ...' By=B' num2str(i) N ...
                    '\n' ...
                    ' cornerarc' ' z=0+' num2str(0) '+0+' num2str((S)*1000,15) ... z value is the front face of the magnet
                    ' angle=' num2str(A*180/pi,15)  ' centerRadius='  num2str((L/A)*1000,15) '\n'...'#corner' ' parent=  z=' num2str((B{2}(i)+B{4}(i)/2)*1000,15) ... ' rotation=Y' num2str(B{3}(i)*180/pi/2,15) ' \n'...
                    '\n'...
                    ]; %#ok<*SAGROW>
            end
        end
    end
    plac{ord}=dipposstr;
    ord=ord+1;
    multbend=tmpmultibend;

end

TotLength

RF_on=0;
% plac RFC
%length[m]        voltage[MV]                lag          freq[MHz]             harmon
%0.501777                0.6           0.424389        476.0054439               1998
RF=['pillbox RFC maxGradient=' num2str(RF_on*0.6/0.501777,15) ...
    ' color=0.5,0.5,0 frequency=0.4760054439 innerLength=501.777 '...
    ' phaseAcc=0.424389 wallThick=100 innerRadius=1000\n'];
RF1pos=0*1000;
plac{ord}=['  # place RFC z=' num2str(RF1pos) '\n'];

ippos=0;
Dumppos=beamstart-1;

positions=[findspos(arc,quadr)'; findspos(arc,sextu)'; findspos(arc,dipol)'; (RF1pos-TotLength)/1000; (beamstart-TotLength)/1000;(TotLength/2)/1000;TotLength*2];

posString=[];
for i=1:length(positions)-1
    posString=[posString num2str(positions(i)*1000) ','];
end
posString=[posString num2str(positions(i)*1000)];

twissH=['profile ' ...
    'zloop=' num2str(beamstart*0) ':' num2str(TotLength*3) ':1000 '...
    ...' z=' posString ...
    ' file=twissLER particle=' particle ...
    ' coordinates=centerline\n']; %   ' coordinates=reference\n'];

%twissH=['profile zloop=' num2str(beamstart*0) ':' num2str(beamstart+TotLength*2.5) ':1000 file=twissHER particle=' particle ...
%      ' coordinates=centerline\n']; %   ' coordinates=reference\n'];

dump=['tubs DUMP innerRadius=0.01 outerRadius=300 length=10 kill=1 material=Cu color=0.2,0.2,0\n '...
    ];

plac{ord+1}=['# place ip parent=  z=' num2str(ippos,15) ' \n' ];
plac{ord+2}=[...
    posbeam 'place BeamVis z=' num2str(beamstart,15) ' y=101 \n'
    ];
plac{ord+3}=['# place DUMP parent=  z=' num2str(Dumppos,15) ' \n'];

%%%%%%                             RF1         RF2                   beam
[s,ind]=sort([findspos(arc,quadr)'; findspos(arc,sextu)'; findspos(arc,dipol)'; RF1pos/1000;beamstart/1000;Dumppos/1000;TotLength/1000]); % in m


R=[head defQ defS defB RF dump];
RPlace=[plac{ind}];


outtext=char([...
    bigmondo ...
    ... definitions
    R ...  RING
    RPlace ...  Place RING magnets
    ' particlecolor e-=0,0,1 e+=1,0,0 \n'...  electron is blue and positron is red.
    ...'g4ui when=4 ''/vis/open OGL''\n'...
    'g4ui when=4 ''/vis/viewer/set/viewpointThetaPhi 90 90''\n'...
    'g4ui when=4 ''/vis/viewer/set/style wireframe''\n'...
    'g4ui when=4 ''/run/beamOn ' num2str(Nevents*2) ' ''\n'...
    ... 'g4ui when=4 ''vis/ogl/printEPS''\n'...
    ]);
% lattice 'g4ui when=4 ''/vis/viewer/set/style wireframe''\n'...    'g4ui ''/run/beamOn 20''\n'...
out=fopen(nameG4bllat,'w+');
fprintf(out,outtext);

fclose('all');
% clear defQ
% clear defS
% clear defB
% clear plac ind ord
% clear defined
disp('--- DONE ---')