function aspsr_v1(varargin)
% Lattice definition file - generated by dimad2at v1.200000 

global FAMLIST THERING GLOBVAL

GLOBVAL.E0 = 3e9;
GLOBVAL.LatticeFile = 'aspsr';
FAMLIST = cell(0);

disp(' ');
disp('*** Loading lattice from aspsr.m ***');

% Problem with getting exactly 216m. This is to correct it
curr_circ = 2.160004055999987e+002;
d1_corr = (curr_circ - 216)/28;

d1	=	drift('d1'	,2.698300e+000 - d1_corr,'DriftPass');
d2	=	drift('d2'	,1.900000e-001,'DriftPass');
d3	=	drift('d3'	,1.650000e-001,'DriftPass');
d4	=	drift('d4'	,2.750000e-001,'DriftPass');
d5	=	drift('d5'	,1.550000e-001,'DriftPass');
d6	=	drift('d6'	,4.500000e-001,'DriftPass');
dipi	=	sbend('dipi'	,2.876667e-001,0.0373999,0.1122,0,-0.334999,'BndMPoleSymplectic4Pass');
dipm	=	sbend('dipm'	,2.876667e-001,0.0373999,0,0,-0.334999,'BndMPoleSymplectic4Pass');
dipo	=	sbend('dipo'	,2.876667e-001,0.0373999,0,0.1122,-0.334999,'BndMPoleSymplectic4Pass');
dips3	=	sbend('dips3'	,7.939600e-001,0.103224,0.1122,0,-0.334999,'BndMPoleSymplectic4Pass');
dips4	=	sbend('dips4'	,9.320400e-001,0.121176,0,0.1122,-0.334999,'BndMPoleSymplectic4Pass');
dips1	=	sbend('dips1'	,9.389440e-001,0.122073,0.1122,0,-0.334999,'BndMPoleSymplectic4Pass');
dips2	=	sbend('dips2'	,7.870560e-001,0.102326,0,0.1122,-0.334999,'BndMPoleSymplectic4Pass');
q14	=	quadrupole('q14'	,8.875000e-002,1.76174,'QuadLinearPass');
q24	=	quadrupole('q24'	,4.500000e-002,-1.03837,'QuadLinearPass');
q34	=	quadrupole('q34'	,8.875000e-002,1.5338,'QuadLinearPass');
s1	=	sextupole('s1'	,1.000000e-001,10,'StrMPoleSymplectic4Pass');
s2	=	sextupole('s2'	,1.000000e-001,-10,'StrMPoleSymplectic4Pass');
s3	=	sextupole('s3'	,1.000000e-001,-7.01464,'StrMPoleSymplectic4Pass');
s4	=	sextupole('s4'	,1.000000e-001,7.18936,'StrMPoleSymplectic4Pass');
hcor	=	corrector('hcor'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
vcor	=	corrector('vcor'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
hcor11	=	corrector('hcor11'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
hcor21	=	corrector('hcor21'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
hcor31	=	corrector('hcor31'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
hcor12	=	corrector('hcor12'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
hcor22	=	corrector('hcor22'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
hcor32	=	corrector('hcor32'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
hcor13	=	corrector('hcor13'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
hcor23	=	corrector('hcor23'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
hcor33	=	corrector('hcor33'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
vcor11	=	corrector('vcor11'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
vcor21	=	corrector('vcor21'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
vcor31	=	corrector('vcor31'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
vcor41	=	corrector('vcor41'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
vcor12	=	corrector('vcor12'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
vcor22	=	corrector('vcor22'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
vcor32	=	corrector('vcor32'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
vcor42	=	corrector('vcor42'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
vcor13	=	corrector('vcor13'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
vcor23	=	corrector('vcor23'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
vcor33	=	corrector('vcor33'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
vcor43	=	corrector('vcor43'	,0.000000e+000,[0.0 0],'ThinCorrectorPass');
rf	=	rfcavity('rf'	,0,3.2e6,4.996540e+008,360,'ThinCavityPass');
d11	=	drift('d11'	,2.698300e+000 - d1_corr - 0,'DriftPass'); % Drift put around the RF
kick1	=	corrector('kick1'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
kick2	=	corrector('kick2'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
kick3	=	corrector('kick3'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
kick4	=	corrector('kick4'	,0.000000e+000,[0 0.0],'ThinCorrectorPass');
dk11	=	drift('dk11'	,2.048300e+000 - d1_corr,'DriftPass');
dk12	=	drift('dk12'	,6.500000e-001,'DriftPass');


% Different optics can be selected here taken from DIMAD least fit routine.
% NOTE: the chromaticities for these values in dimad do not coincide
% exactly with what AT calculates. For consistency all these values will be
% taken from DIMAD
% 1 := tune [13.3 5.2] disp 0.24 chrom 0
% 2 := tune [13.3 5.2] disp 0.10 chrom 0
% 3 := tune [13.3 5.2] disp 0.00 chrom 0
% 4 := tune [13.3 5.2] disp 0.00 chrom 1
% 5 := tune [13.3 5.2] disp 0.10 chrom 1
% 6 := tune [13.3 5.2] disp 0.24 chrom 1
% 7 := tune [13.7 5.8] disp 0.00 chrom 0

if nargin >= 2
    optics = varargin{2};
else
    optics = 3; % default
end

switch  optics
    case 1
        disp('tune [13.3 5.2] disp 0.24 chrom 0');
        q14_k = .17882880586760E+01;
        q24_k = -.10400954730253E+01;
        q34_k = .15198069179328E+01;
        s1_m = 10.000000;
        s2_m = -10.000000;
        s3_m = -.97230089993554E+01;
        s4_m = .93179016069090E+01;
    case 2
        disp('tune [13.3 5.2] disp 0.10 chrom 0');
        q14_k = .17720058771843E+01;
        q24_k = -.10389769468824E+01;
        q34_k = .15282801819176E+01;
        s1_m = 10.000000;
        s2_m = -10.000000;
        s3_m = -.75994591839996E+01;
        s4_m = .76103884899674E+01;
    case 3
        disp('tune [13.3 5.2] disp 0.00 chrom 0');
        q14_k = .17617406397041E+01;
        q24_k = -.10383748878187E+01;
        q34_k = .15338011782673E+01;
        s1_m = 14.000000;
        s2_m = -14.000000;
        s3_m = -.70146375990455E+01;
        s4_m = .71893566203318E+01;
    case 4  
        disp('tune [13.3 5.2] disp 0.00 chrom 1');
        q14_k = .17617406397041E+01;
        q24_k = -.10383748878187E+01;
        q34_k = .15338011782673E+01;
        s1_m = 10.000000;
        s2_m = -10.000000;
        s3_m = -.72625907536712E+01;
        s4_m = .74301593045396E+01;
    case 5
        disp('tune [13.3 5.2] disp 0.10 chrom 1');
        q14_k = .17720058771843E+01;
        q24_k = -.10389769468824E+01;
        q34_k = .15282801819176E+01;
        s1_m = 10.000000;
        s2_m = -10.000000;
        s3_m = -.79166076050914E+01;
        s4_m = .79238133466255E+01;
    case 6
        disp('tune [13.3 5.2] disp 0.24 chrom 1');
        q14_k = .17882880586760E+01;
        q24_k = -.10400954730253E+01;
        q34_k = .15198069179328E+01;
        s1_m = 10.000000;
        s2_m = -10.000000;
        s3_m = -.10260983643758E+02;
        s4_m = .98649616334321E+01;
    case 7
        disp('tune [13.7 5.8] disp 0.00 chrom 0');
        q14_k = 1.80390211273090;
        q24_k = -1.14492384587750;
        q34_k = 1.55608186640390;
        s1_m = 10.000000;
        s2_m = -10.000000;
        s3_m = -.70146375990455E+01;
        s4_m = .71893566203318E+01;
    case 8
        disp('tune [13.27 5.22] disp 0.00 chrom 0, s1s2 = +-14');
        q14_k = 1.7578525197264;
        q24_k = -1.038011510073;
        q34_k = 1.5337246103688;
        s1_m = 14.000000;
        s2_m = -14.000000;
        s3_m = -7.032579989605;
        s4_m = 7.2218549278029;
end

% For the quadrupoles
FAMLIST{q14}.ElemData.K = q14_k;
FAMLIST{q24}.ElemData.K = q24_k;
FAMLIST{q34}.ElemData.K = q34_k;
FAMLIST{q14}.ElemData.PolynomB(2) = q14_k;
FAMLIST{q24}.ElemData.PolynomB(2) = q24_k;
FAMLIST{q34}.ElemData.PolynomB(2) = q34_k;
% Sextupoles
FAMLIST{s1}.ElemData.PolynomB(3) = s1_m;
FAMLIST{s2}.ElemData.PolynomB(3) = s2_m;
FAMLIST{s3}.ElemData.PolynomB(3) = s3_m;
FAMLIST{s4}.ElemData.PolynomB(3) = s4_m;

% Begin declaration of element groups and lattice.
dip = [ dipi dipm dipm dipm dipm dipo ];
dip1 = [ dips1 dips2 ];
dip2 = [ dips3 dips4 ];
q1 = [ q14 q14 q14 q14 ];
q2 = [ q24 q24 q24 q24 ];
q3 = [ q34 q34 q34 q34 ];
cel = [ d1 s1 hcor s1 d2 q1 d3 s2 vcor s2 d4 dip d4 s3 vcor s3 d5 q2 d6 q3 d2 s4 hcor s4 d2 q3 d6 q2 d5 s3 vcor s3 d4 dip d4 s2 vcor s2 d3 q1 d2 s1 hcor s1 d1 ];
cel1 = [ d1 s1 hcor11 s1 d2 q1 d3 s2 vcor11 s2 d4 dip1 d4 s3 vcor21 s3 d5 q2 d6 q3 d2 s4 hcor21 s4 d2 q3 d6 q2 d5 s3 vcor31 s3 d4 dip2 d4 s2 vcor41 s2 d3 q1 d2 s1 hcor31 s1 d1 ];
cel2 = [ d1 s1 hcor12 s1 d2 q1 d3 s2 vcor12 s2 d4 dip1 d4 s3 vcor22 s3 d5 q2 d6 q3 d2 s4 hcor22 s4 d2 q3 d6 q2 d5 s3 vcor32 s3 d4 dip2 d4 s2 vcor42 s2 d3 q1 d2 s1 hcor32 s1 d1 ];
cel3 = [ d1 s1 hcor13 s1 d2 q1 d3 s2 vcor13 s2 d4 dip d4 s3 vcor23 s3 d5 q2 d6 q3 d2 s4 hcor23 s4 d2 q3 d6 q2 d5 s3 vcor33 s3 d4 dip d4 s2 vcor43 s2 d3 q1 d2 s1 hcor33 s1 d1 ];
celrf06 = [ d1 s1 hcor s1 d2 q1 d3 s2 vcor s2 d4 dip d4 s3 vcor s3 d5 q2 d6 q3 d2 s4 hcor s4 d2 q3 d6 q2 d5 s3 vcor s3 d4 dip d4 s2 vcor s2 d3 q1 d2 s1 hcor s1 d11 ];
celrf07 = [ d11 s1 hcor s1 d2 q1 d3 s2 vcor s2 d4 dip d4 s3 vcor s3 d5 q2 d6 q3 d2 s4 hcor s4 d2 q3 d6 q2 d5 s3 vcor s3 d4 dip d4 s2 vcor s2 d3 q1 d2 s1 hcor s1 d1 ];
celkick14 = [ dk11 kick1 dk12 s1 hcor s1 d2 q1 d3 s2 vcor s2 d4 dip d4 s3 vcor s3 d5 q2 d6 q3 d2 s4 hcor s4 d2 q3 d6 q2 d5 s3 vcor s3 d4 dip d4 s2 vcor s2 d3 q1 d2 s1 hcor s1 dk12 kick2 dk11 ];
celkick01 = [ dk11 kick3 dk12 s1 hcor s1 d2 q1 d3 s2 vcor s2 d4 dip d4 s3 vcor s3 d5 q2 d6 q3 d2 s4 hcor s4 d2 q3 d6 q2 d5 s3 vcor s3 d4 dip d4 s2 vcor s2 d3 q1 d2 s1 hcor s1 dk12 kick4 dk11 ];
bumpsect = [ cel1 cel2 ];
bumpring = [ cel cel cel cel cel cel cel1 cel2 cel3 cel cel cel cel cel ];
krrf = [ cel rf cel cel cel cel cel cel1 cel2 cel3 cel cel cel cel cel ];
rfring = [ cel rf cel cel cel cel cel cel cel cel cel cel cel cel cel ];
ring = [ cel cel cel cel cel cel cel cel cel cel cel cel cel cel ];
fullring = [ celkick14 celkick01 cel cel cel cel cel rf cel cel cel cel cel cel cel ];
rfcel = [ cel rf ];

if nargin >= 1
    fprintf('Using lattice : %s\n', varargin{1});
    eval(['buildlat(' varargin{1} ');']);
else
    % Default lattice to load
    fprintf('Using default lattice : fullring\n');
    buildlat(fullring);
end

evalin('caller','global THERING FAMLIST GLOBVAL');
disp('** Done **');